<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
  license agreements. See the NOTICE file distributed with this work for additional 
  information regarding copyright ownership. The ASF licenses this file to 
  you under the Apache License, Version 2.0 (the "License"); you may not use 
  this file except in compliance with the License. You may obtain a copy of 
  the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
  by applicable law or agreed to in writing, software distributed under the 
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
  OF ANY KIND, either express or implied. See the License for the specific 
  language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>cloud-client-ui</artifactId>
  <name>Apache CloudStack Client UI</name>
  <packaging>war</packaging>
  <parent>
    <groupId>org.apache.cloudstack</groupId>
    <artifactId>cloudstack</artifactId>
    <version>4.2.0-SNAPSHOT</version>
  </parent>
  <dependencies>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-acl-static-role-based</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-api-limit-account-based</artifactId>
      <version>${project.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-api-discovery</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-user-authenticator-ldap</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-user-authenticator-md5</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-user-authenticator-plaintext</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-user-authenticator-sha256salted</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-network-nvp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-network-ovs</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-network-elb</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-network-vns</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-network-midonet</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-hypervisor-xen</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-hypervisor-baremetal</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
       <groupId>org.apache.cloudstack</groupId>
       <artifactId>cloud-plugin-hypervisor-ovm</artifactId>
       <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-hypervisor-kvm</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-storage-allocator-random</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-planner-user-dispersing</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-planner-user-concentrated-pod</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-planner-implicit-dedication</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-host-allocator-random</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-mom-rabbitmq</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${cs.mysql.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
    	<groupId>org.apache.cloudstack</groupId>
    	<artifactId>cloud-framework-ipc</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-framework-rest</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-api</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
    	<artifactId>cloud-engine-components-api</artifactId>
    	<version>${project.version}</version>
    </dependency>

    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-compute</artifactId>
        <version>${project.version}</version>
    </dependency>

    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-network</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-orchestration</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-schema</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-storage</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-storage-backup</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-storage-image</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-storage-imagemotion</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-storage-snapshot</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-engine-storage-volume</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-hypervisor-simulator</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.cloudstack</groupId>
        <artifactId>cloud-plugin-storage-volume-default</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-syslog-alerts</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-snmp-alerts</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-plugin-host-anti-affinity</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cloudstack</groupId>
      <artifactId>cloud-console-proxy</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>install</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <webXml>./target/generated-webapp/WEB-INF/web.xml</webXml>
          <warSourceDirectory>./target/generated-webapp</warSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.26</version>
        <configuration>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
          <webXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</webXml>
          <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
          <webAppConfig>
            <contextPath>/client</contextPath>
            <extraClasspath>${project.build.directory}/utilities/scripts/db/;${project.build.directory}/utilities/scripts/db/db/</extraClasspath>
          </webAppConfig>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <path>/client</path>
          <tomcatWebXml>${basedir}/WEB-INF/web.xml</tomcatWebXml>
          <warSourceDirectory>${project.build.directory}/generated-webapp/</warSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <!-- Copy the systemvm in the package phase as it is generated 
               by console-proxy in the package phase. 
          -->
          <execution>
            <id>copy-systemvm</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${basedir}/target/generated-webapp/WEB-INF/classes/vms">
                  <fileset dir="${basedir}/../services/console-proxy/server/dist">
                    <include name="systemvm.zip" />
                    <include name="systemvm.iso" />
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>generate-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${basedir}/target/generated-webapp/WEB-INF/classes/scripts">
                  <fileset dir="${basedir}/../scripts" />
                </copy>
                <!--  CLOUDSTACK-1304 -->
                <chmod perm="755" >
                    <fileset dir="${basedir}/target/generated-webapp/WEB-INF/classes/scripts" />
                </chmod>
                <copy
                  todir="${basedir}/target/generated-webapp/WEB-INF/">
                  <fileset dir="${basedir}/WEB-INF/">
                    <include name="web.xml" />
                  </fileset>
                </copy>
                <copy
                  todir="${basedir}/target/generated-webapp/WEB-INF/classes">
                  <fileset dir="${basedir}/WEB-INF/classes">
                    <include name="resources/**/*" />
                  </fileset>
                </copy>
                <copy todir="${basedir}/target/generated-webapp">
                  <fileset dir="${basedir}/../ui" />
                </copy>
                <copy overwrite="true"
                  todir="${basedir}/target/generated-webapp/WEB-INF/classes">
                  <fileset dir="${basedir}/tomcatconf">
                    <include name="*.in" />
                  </fileset>
                  <globmapper from="*.in" to="*" />
                  <filterchain>
                    <filterreader
                      classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile"
                        value="${cs.replace.properties}" />
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/generated-webapp/WEB-INF/classes">
                  <fileset dir="${basedir}/tomcatconf">
                    <include name="*.in" />
                  </fileset>
                  <globmapper from="*.in" to="*" />
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}" />
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/utilities/bin">
                  <fileset dir="${basedir}/../setup/bindir">
                    <include name="*.in" />
                  </fileset>
                  <globmapper from="*.in" to="*" />
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}" />
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/utilities/bin">
                  <fileset dir="${basedir}/bindir">
                    <include name="*.in" />
                  </fileset>
                  <globmapper from="*.in" to="*" />
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}" />
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/utilities/scripts/db">
                  <fileset dir="${basedir}/../setup/db">
                    <include name="**/*" />
                  </fileset>
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}" />
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/conf">
                  <fileset dir="${basedir}/tomcatconf">
                    <include name="*.in" />
                  </fileset>
                  <globmapper from="*.in" to="*" />
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}" />
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/conf">
                  <fileset dir="${basedir}/tomcatconf">
                    <exclude name="*.in" />
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>process-nonoss</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target if="${nonoss}">
                <echo>test</echo>
                <replaceregexp
                    file="${basedir}/target/generated-webapp/WEB-INF/classes/environment.properties"
                    match="cloud-stack-components-specification=.*"
                    replace="cloud-stack-components-specification=components-nonoss.xml" byline="true"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>process-simulator-context</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target if="${simulator}">
                <echo>test</echo>
                <replaceregexp
                    file="${basedir}/target/generated-webapp/WEB-INF/web.xml"
                    match="classpath:componentContext.xml"
                    replace="classpath:simulatorComponentContext.xml" byline="true" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>process-nonoss-spring-context</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target if="${nonoss}">
                <replaceregexp
                  file="${basedir}/target/generated-webapp/WEB-INF/web.xml"
                  match="classpath:componentContext.xml"
                  replace="classpath:nonossComponentContext.xml" byline="true" />
                <copy overwrite="true" todir="${basedir}/target/generated-webapp/WEB-INF/classes/scripts">
                    <fileset dir="${basedir}/../plugins/network-elements/cisco-vnmc/scripts">
                        <include name="**/*" />
                    </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>process-quickcloud-spring-context</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target if="${quickcloud}">
                <echo>quickcloud</echo>
                <replaceregexp
                    file="${basedir}/target/generated-webapp/WEB-INF/classes/applicationContext.xml"
                  match="com.cloud.consoleproxy.ConsoleProxyManagerImpl"
                  replace="com.cloud.consoleproxy.StaticConsoleProxyManager" byline="true" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- there are the jasypt libs requires by some of the python scripts -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.5.1</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jasypt</groupId>
                  <artifactId>jasypt</artifactId>
                  <version>1.9.0</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/pythonlibs</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.jasypt</groupId>
                  <artifactId>jasypt</artifactId>
                  <version>1.8</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/pythonlibs</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-antrun-plugin
                    </artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>developer</id>
      <activation>
        <property>
          <name>simulator</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-hypervisor-simulator</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>netapp</id>
      <activation>
        <property>
          <name>nonoss</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-netapp</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>f5</id>
      <activation>
        <property>
          <name>nonoss</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-network-f5</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>netscaler</id>
      <activation>
        <property>
          <name>nonoss</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-network-netscaler</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>srx</id>
      <activation>
        <property>
          <name>nonoss</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-network-srx</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>vmware</id>
      <activation>
        <property>
          <name>nonoss</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-hypervisor-vmware</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-vmware-base</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.cloudstack</groupId>
          <artifactId>cloud-plugin-network-cisco-vnmc</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
